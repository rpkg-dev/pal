% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal.gen.R
\name{as_string}
\alias{as_string}
\title{Convert to a character scalar (aka string)}
\usage{
as_string(..., sep = "")
}
\arguments{
\item{...}{The \R objects to be assembled to a single string. \link[rlang:dyn-dots]{Dynamic dots} are supported.}

\item{sep}{The separator to delimit \code{...}. Defaults to none (\code{""}).}
}
\value{
A character scalar.
}
\description{
Similar to \code{\link[=paste0]{paste0(..., collapse = "")}}, but \emph{recursively} converts its inputs to type character.
}
\examples{
library(magrittr)

input <-
  sample.int(n = 5,
             size = 3) \%>\%
  paste0(", ") \%>\%
  purrr::map(rep,
             times = 20) \%>\%
  list(c("This is a glut of ", "meaningless numbers: "), .)

# while this just converts `input` in a lazy way ...
paste0(input,
       collapse = "")

# ... this one works harder
pal::as_string(input)
}
\seealso{
Other string functions:
\code{\link{as_chr}()},
\code{\link{as_comment_string}()},
\code{\link{as_line_feed_chr}()},
\code{\link{cat_lines}()},
\code{\link{dsv_colnames}()},
\code{\link{escape_lf}()},
\code{\link{fuse_regex}()},
\code{\link{prettify_nr}()},
\code{\link{prose_ls}()},
\code{\link{sentenceify}()},
\code{\link{wrap_chr}()}
}
\concept{string}
