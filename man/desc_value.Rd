% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal.gen.R
\name{desc_value}
\alias{desc_value}
\title{Get value from \code{DESCRIPTION} file field, cleaned up and with dynamic fallback}
\usage{
desc_value(
  key,
  file = ".",
  default = glue::glue("<No `{key}` field set in DESCRIPTION!>")
)
}
\arguments{
\item{key}{The field to query.}

\item{file}{DESCRIPTION file to use. By default the DESCRIPTION
file of the current package (i.e. the package the working directory
is part of) is used.}

\item{default}{Default value to return if \code{key} is not found.}
}
\value{
A character scalar.
}
\description{
Returns the value from a \code{DESCRIPTION} file field (aka \emph{key}). Whitespaces at the start and end of the value as well as repeated whitespaces within
it are removed.
}
\details{
This function is a slightly modified version of \code{\link[desc:desc_get_field]{desc::desc_get_field()}} that allows the \code{default} parameter to be dependent on the \code{key} parameter.

By default, the following string is returned if \code{key = "NoRealKey"} is not found:

\if{html}{\out{<div class="sourceCode">}}\preformatted{"<No `NoRealKey` field set in DESCRIPTION!>"
}\if{html}{\out{</div>}}

If you rather want to take an action like throwing an error, it's recommended to call \code{\link[desc:desc_get_field]{desc::desc_get_field()}} directly.
}
\examples{
pal::desc_value(key = "Description",
                file = fs::path_package("pal"))
}
\seealso{
Other package \code{DESCRIPTION} functions:
\code{\link{desc_dep_vrsn}()},
\code{\link{desc_list}()},
\code{\link{desc_url_git}()}
}
\concept{desc}
