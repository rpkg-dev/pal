% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal-GEN.R
\name{is_equal_df}
\alias{is_equal_df}
\title{Determine if two data frames/tibbles are equal}
\usage{
is_equal_df(
  x,
  y,
  ignore_col_order = TRUE,
  ignore_row_order = TRUE,
  convert = FALSE,
  name_repair = "minimal",
  quiet = TRUE
)
}
\arguments{
\item{x, y}{Two data frames/tibbles to compare.}

\item{ignore_col_order}{Whether or not to ignore the order of columns.}

\item{ignore_row_order}{Whether or not to ignore the order of rows.}

\item{convert}{Whether or not to convert similar column types. Currently, this will convert factor to character and integer to double.}

\item{name_repair}{One of \code{"unique"}, \code{"universal"}, or \code{"check_unique"}. See \code{\link[vctrs:vec_as_names]{vctrs::vec_as_names()}} for the meaning of these options.}

\item{quiet}{Whether or not to output information about detected differences between \code{x} and \code{y} to the console.}
}
\value{
A logical scalar indicating the result of the comparison.
}
\description{
Compares two \link[base:data.frame]{data frames}/\link[tibble:tibble]{tibbles} (or two objects coercible to tibbles like \link[base:matrix]{matrices}), optionally
ignoring row and column ordering, and returns \code{TRUE} if both are equal, or \code{FALSE} otherwise. If the latter is the case and \code{quiet = FALSE}, information
about detected differences is printed to the console.
}
\examples{
scramble <- function(x) x[sample(nrow(x)), sample(ncol(x))]

# by default, ordering of rows and columns is ignored ...
is_equal_df(x = mtcars,
            y = scramble(mtcars))

# ... but those can be overriden if desired
is_equal_df(x = mtcars,
            y = scramble(mtcars),
            ignore_col_order = FALSE)
is_equal_df(x = mtcars,
            y = scramble(mtcars),
            ignore_row_order = FALSE)

# by default, `is_equal_df()` is sensitive to variable type differences ...
df1 <- data.frame(x = "a",
                  stringsAsFactors = FALSE)
df2 <- data.frame(x = factor("a"))
is_equal_df(df1, df2)

# ... but you can request it to convert similar types
is_equal_df(df1, df2,
            convert = TRUE)
}
\seealso{
Data frame / Tibble functions
\code{\link{all_cols}()},
\code{\link{daff_diff}()},
\code{\link{open_as_tmp_spreadsheet}()}
}
\concept{tibble}
