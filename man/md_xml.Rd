% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal-GEN.R
\name{md_xml}
\alias{md_xml}
\title{Parse (R) Markdown as CommonMark XML tree}
\usage{
md_xml(
  md,
  smart_punctuation = TRUE,
  hardbreaks = FALSE,
  normalize = TRUE,
  sourcepos = FALSE,
  extensions = TRUE,
  eol = c("LF", "CRLF", "CR", "LFCR")
)
}
\arguments{
\item{md}{The (R) Markdown file content as a character scalar.}

\item{smart_punctuation}{Whether to enable \href{https://pandoc.org/MANUAL.html#extension-smart}{Pandoc's \code{smart} extension} which converts straight quotes to
curly quotes, \verb{---} to an em-dash (—), \verb{--} to an en-dash (–), and \code{...} to ellipses (…). Nonbreaking spaces are inserted after certain abbreviations, such
\code{Mr.}.}

\item{hardbreaks}{Whether or not to treat newlines as hard line breaks.}

\item{normalize}{Consolidate adjacent text nodes.}

\item{sourcepos}{Include source position attribute in output.}

\item{extensions}{Enables Github extensions. Can be \code{TRUE} (all) \code{FALSE} (none) or a character
vector with a subset of available \link[commonmark]{extensions}.}

\item{eol}{End of line (EOL) control character sequence. One of
\itemize{
\item \code{"LF"} for the line feed (LF) character (\code{"\\n"}). The standard on Unix and Unix-like systems (Linux, macOS, *BSD, etc.) and the \strong{default}.
\item \code{"CRLF"} for the carriage return + line feed (CR+LF) character sequence (\code{"\\r\\n"}). The standard on Microsoft Windows, DOS and some other systems.
\item \code{"CR"} for the carriage return (CR) character (\code{"\\r"}). The standard on classic Mac OS and some other antiquated systems.
\item \code{"LFCR"} for the line feed + carriage return (LF+CR) character sequence (\code{"\\n\\r"}). The standard on RISC OS and some other exotic systems.
}}
}
\value{
An \code{\link[xml2:oldclass]{xml_document}}.
}
\description{
Parses (R) Markdown file content according to the \href{https://commonmark.org/}{CommonMark} specification and returns it as an XML parse tree.
}
\examples{
pal::gh_text_file(path = "Rmd/pal.Rmd",
                  owner = "salim-b",
                  name = "pal") |>
  pal::md_xml()
}
\seealso{
Other CommonMark parsing functions:
\code{\link{md_xml_subnode_ix}()}
}
\concept{commonmark}
