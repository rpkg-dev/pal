% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal-GEN.R
\name{str_replace_file}
\alias{str_replace_file}
\title{Replace matched patterns in text files}
\usage{
str_replace_file(
  path,
  pattern,
  process_line_by_line = FALSE,
  verbose = TRUE,
  n_context_chrs = 20L,
  show_rel_path = FALSE,
  dry_run = FALSE
)
}
\arguments{
\item{path}{Paths to the text files. A character vector.}

\item{pattern}{A named character vector with patterns as names and replacements as values (\code{c(pattern1 = replacement1)}). Patterns are interpreted as
regular expressions as described in \code{\link[stringi:about_search_regex]{stringi::stringi-search-regex()}}. Replacements are interpreted as-is, except that references of the form \verb{\\1}, \verb{\\2},
etc. will be replaced with the contents of the respective matched group (created in patterns using \verb{()}). Pattern-replacement pairs are processed in the
order given, meaning that first listed pairs are applied before later listed ones.}

\item{process_line_by_line}{Whether each line in a file should be treated as a separate string or the whole file as one single string. While the latter is
more performant, you probably want the former if you're using \code{"^"} or \code{"$"} in your \code{pattern}s.}

\item{verbose}{Whether to display replacements on the console.}

\item{n_context_chrs}{The (maximum) number of characters displayed around the actual \code{string} and its replacement. The number refers to a single side of
\code{string}/replacement, so the total number of context characters is at the maximum \code{2 * n_context_chrs}. Only relevant if \code{verbose = TRUE}.}

\item{show_rel_path}{Whether to display file \code{path}s as relative from the current working directory. If \code{FALSE}, absolute paths are displayed. Only relevant
if \code{verbose = TRUE}.}

\item{dry_run}{Show replacements on the console only, without actually modifiying any files. Implies \code{verbose = TRUE}.}
}
\value{
\code{path} invisibly.
}
\description{
Apply pattern-based string replacement to multiple files at once. A series of regular-expression-replacement pairs can be provided and all performed
replacements can be displayed on the console (\code{verbose = TRUE}), optionally without actually changing any file content (\code{dry_run = TRUE}).
}
\seealso{
String functions
\code{\link{as_chr}()},
\code{\link{as_string}()},
\code{\link{cat_lines}()},
\code{\link{dsv_colnames}()},
\code{\link{escape_lf}()},
\code{\link{fuse_regex}()},
\code{\link{prose_ls}()},
\code{\link{str_replace_verbose}()}
}
\concept{string}
