% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal.gen.R
\name{desc_get_field_safe}
\alias{desc_get_field_safe}
\title{Get value from \code{DESCRIPTION} file field, cleaned up and with dynamic fallback}
\usage{
desc_get_field_safe(
  key,
  default = glue::glue("<No `{key}` field set in DESCRIPTION!>"),
  trim_ws = TRUE,
  squish_ws = trim_ws,
  file = "."
)
}
\arguments{
\item{key}{The field to query.}

\item{default}{Default value to return if \code{key} is not found.}

\item{trim_ws}{Whether to trim leading and trailing whitespace
from the value. Defaults to \code{TRUE}.}

\item{squish_ws}{Whether to reduce repeated whitespace in the value.
Defaults to \code{trim_ws}.}

\item{file}{DESCRIPTION file to use. By default the DESCRIPTION
file of the current package (i.e. the package the working directory
is part of) is used.}
}
\value{
A character scalar.
}
\description{
Returns the value from a \code{DESCRIPTION} file field (aka \emph{key}). Thin wrapper around \code{\link[desc:desc_get_field]{desc::desc_get_field()}} that returns an informative string referring to
the given \code{key} as \code{default} if the field is unset.
}
\details{
By default, the following string is returned if \code{key = "NoRealKey"} is not found:

\if{html}{\out{<div class="sourceCode">}}\preformatted{"<No `NoRealKey` field set in DESCRIPTION!>"
}\if{html}{\out{</div>}}

If you rather want to take an action like throwing an error, it's recommended to call \code{\link[desc:desc_get_field]{desc::desc_get_field()}} directly.
}
\examples{
pal::desc_get_field_safe(key = "Description",
                         file = fs::path_package("pal"))
}
\seealso{
Other package \code{DESCRIPTION} functions:
\code{\link{desc_dep_vrsn}()},
\code{\link{desc_list}()},
\code{\link{desc_url_git}()}
}
\concept{desc}
