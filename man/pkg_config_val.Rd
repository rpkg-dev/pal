% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal.gen.R
\name{pkg_config_val}
\alias{pkg_config_val}
\title{Get package configuration value}
\usage{
pkg_config_val(
  key,
  pkg = utils::packageName(env = parent.frame()),
  default = NULL,
  require = NULL,
  env = parent.frame()
)
}
\arguments{
\item{key}{Configuration key name. A character scalar.}

\item{pkg}{Package name. A character scalar. Defaults to the name of the calling package.}

\item{default}{Default value to fall back to if neither the \R option \verb{<pkg>.<key>} nor the environment variable \verb{R_<PKG>_<KEY>} is set. If \code{NULL}, the
default value for \code{key} in \verb{<pkg>::pkg_config} will be used (if defined).}

\item{require}{Whether or not to require that the configuration value is set. If \code{TRUE} and no configuration value is set, an error is thrown with
instructions on how to provide a value. If \code{NULL}, the \code{require} value for \code{key} in \verb{<pkg>::pkg_config} will be used (defaults to \code{TRUE}).}

\item{env}{Environment to evaluate \code{default_value_dynamic} in, if necessary.}
}
\value{
An \R object.
}
\description{
Retrieves a package configuration value in a canonical way. The following configuration sources are consulted in descending order and the first hit is
returned:
\enumerate{
\item The \R \link[=options]{option} \verb{<pkg>.<key>}.
\item The \href{https://en.wikipedia.org/wiki/Environment_variable}{environment variable} \verb{R_<PKG>_<KEY>}.
\item The ad-hoc default value specified via this function's \code{default} argument (\code{NULL} means unspecified).
\item The configuration's global default value as specified in the package's configuration metadata (column \code{default_value} or \code{default_value_dynamic} of
\verb{<pkg>::pkg_config}; \code{NULL} means unspecified).
}

Depending on \code{require}, an error is thrown if none of the above sources contain a value.
}
\details{
This function is intended to be used by package authors who want to expose their package configuration options in a canonical way (as outlined above). For
\code{pkg_config_val()} to properly work, the configuration metadata must be available in the package's namespace as object \code{pkg_config}, which must be a
\link[=data.frame]{dataframe} or \link[tibble:tbl_df-class]{tibble} with at minimum the columns \code{key} (of type character holding the configuration key names) and
\code{default_value} (of type list holding static default configuration values) or \code{default_value_dynamic} (of type character holding R code expressions that
evaluate to default configuration values dynamically at access time).
}
\examples{
try(
  pal::pkg_config_val(key = "gen_pkgdown_ref",
                      pkg = "pkgpurl")
)
}
\seealso{
\code{\link[xfun:env_option]{xfun::env_option()}} for a compatible (albeit less powerful) approach to R option and environment variable coherence.

Other package configuration functions:
\code{\link{augment_pkg_config}()},
\code{\link{has_pkg_config_val}()},
\code{\link{pkg_config_val_default}()},
\code{\link{print_pkg_config}()}
}
\concept{pkg_config}
