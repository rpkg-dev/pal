% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal.gen.R
\name{enum_str}
\alias{enum_str}
\title{Enumerate vector's elements as string}
\usage{
enum_str(
  x,
  sep = ", ",
  sep2 = " and ",
  last = sep2,
  trunc = Inf,
  width = Inf,
  ellipsis = cli::symbol$ellipsis,
  style = c("both-ends", "head"),
  wrap = ""
)
}
\arguments{
\item{x}{Character vector, or an object with an \code{as.character()} method
to collapse.}

\item{sep}{Separator. A character string.}

\item{sep2}{Separator for the special case that \code{x} contains only two
elements. A character string. Defaults to the value of \code{last} without the
serial comma.}

\item{last}{Last separator, if there is no truncation. E.g. use
\code{", and "} for the \href{https://en.wikipedia.org/wiki/Serial_comma}{serial comma}. A character string.}

\item{trunc}{Maximum number of elements to show. For \code{style = "head"}
at least \code{trunc = 1} is used. For \code{style = "both-ends"} at least
\code{trunc = 5} is used, even if a smaller number is specified.}

\item{width}{Limit for the display width of the result, in characters.
This is a hard limit, and the output will never exceed it.
This argument is not implemented for the \code{"both-ends"} style, which
always uses \code{Inf}, with a warning if a finite \code{width} value is set.}

\item{ellipsis}{Character string to use at the place of the truncation.
By default, the Unicode ellipsis character is used if the console is
UTF-8, and three dots otherwise.}

\item{style}{Truncation style:
\itemize{
\item \code{both-ends}: the default, shows the beginning and end of the vector,
and skips elements in the middle if needed.
\item \code{head}: shows the beginning of the vector, and skips elements at the
end, if needed.
}}

\item{wrap}{Character sequence \code{x} is to be wrapped in. A character vector or something coercible to.}
}
\value{
A character scalar.
}
\description{
Takes a vector or list and enumerates its elements in a single string. Convenience function combining \code{\link[=wrap_chr]{wrap_chr()}} and \code{\link[cli:ansi_collapse]{cli::ansi_collapse()}} with slightly
differing defaults (\code{last} defaults to the value of \code{sep2}).
}
\examples{
# by default, `last` defaults to `sep2`
pal::enum_str(1:2)
pal::enum_str(1:3)

# input is optionally wrapped in a character sequence
pal::enum_str(letters[1:3],
              wrap = "`")
}
\seealso{
Other string functions:
\code{\link{as_chr}()},
\code{\link{as_comment_str}()},
\code{\link{as_env_var_name}()},
\code{\link{as_line_feed_chr}()},
\code{\link{as_str}()},
\code{\link{capitalize_first}()},
\code{\link{dsv_colnames}()},
\code{\link{escape_lf}()},
\code{\link{fuse_regex}()},
\code{\link{phrase_nr}()},
\code{\link{sentenceify}()},
\code{\link{wrap_chr}()}
}
\concept{string}
