% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal.gen.R
\name{cli_qty_lgl}
\alias{cli_qty_lgl}
\alias{cli_no_lgl}
\title{\href{https://cli.r-lib.org/}{cli} pluralization helpers for booleans}
\usage{
cli_qty_lgl(cnd)

cli_no_lgl(cnd)
}
\arguments{
\item{cnd}{Condition. A logical scalar.}
}
\value{
\code{0L} or \code{1L} with the additional class \code{cli_noprint}.
}
\description{
Equivalents to \code{\link[cli:pluralization-helpers]{cli::qty()}} and \code{\link[cli:pluralization-helpers]{cli::no()}} for a logical input.
}
\details{
If \code{cnd} evaluates to \code{TRUE}, the resulting cli quantity is \code{1}, otherwise \code{0}. See cli's \href{https://cli.r-lib.org/articles/pluralization.html#pluralization-markup-1}{pluralization rules} for details about how these quantities are interpreted.
}
\examples{
cnd <- runif(1L) < 0.5

cli::pluralize(paste0(
  "{pal::cli_qty_lgl(cnd)}I think this function ",
  "{?comes in handy/is not worth a second of my attention}. Having looked at the rest of the ",
  "package, this {?is quite surprising/does not come as a surprise}."
))

cli::pluralize("This function is worth exactly {pal::cli_no_lgl(cnd)} second of my time.")
}
\seealso{
Other functions extending the cli package:
\code{\link{cli_process_expr}()}
}
\concept{cli}
