% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal.gen.R
\name{req_cached}
\alias{req_cached}
\title{Perform a cached HTTP GET request}
\usage{
req_cached(url, max_tries = 3L)
}
\arguments{
\item{url}{HTTP protocol address. The scheme is optional, so both \code{"google.com"} and \code{"https://google.com"} will work. A character scalar.}

\item{max_tries}{Maximum number of request attempts in case of an HTTP error. An integerish scalar. Retries are performed using exponential backoff and jitter, see \code{\link[httr2:req_retry]{httr2::req_retry()}} for details.}
}
\value{
\itemize{
\item If the HTTP request succeeds, and the status code is ok (e.g. 200),
an HTTP \link[httr2]{response}.
\item If the HTTP request succeeds, but the status code is an error
(e.g a 404), an error with class \code{c("httr2_http_404", "httr2_http")}.
By default, all 400 and 500 status codes will be treated as an error,
but you can customise this with \code{\link[httr2:req_error]{req_error()}}.
\item If the HTTP request fails (e.g. the connection is dropped or the
server doesn't exist), an error with class \code{"httr2_failure"}.
}
}
\description{
Convenience wrapper around a bunch of \link[httr2:httr2-package]{httr2} functions.
}
\seealso{
Other HTTP functions:
\code{\link{is_http_success}()},
\code{\link{is_url}()}
}
\concept{http}
