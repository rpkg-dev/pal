% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal.gen.R
\name{assert_mime_type}
\alias{assert_mime_type}
\title{Assert MIME type}
\usage{
assert_mime_type(
  response,
  mime_type,
  msg = paste0("The response's MIME type is {.val {mime_type_actual}} ",
    "but expected was {.val {mime_type}}."),
  msg_suffix = ""
)
}
\arguments{
\item{response}{A \link[httr:response]{response object}.}

\item{mime_type}{Expected MIME type, e.g. \code{"application/json"}. A character scalar.}

\item{msg}{Message to display in case of an error. Supports cli's \link[cli:inline-markup]{inline markup}. A character scalar.}

\item{msg_suffix}{Additional string to append to \code{msg}. Supports cli's \link[cli:inline-markup]{inline markup}.}
}
\value{
\code{response}, invisibly.
}
\description{
Asserts that a \link[httr:response]{response object} is of a specific \href{https://en.wikipedia.org/wiki/Media_type}{MIME type}. Convenience wrapper around
\code{\link[httr:http_type]{httr::http_type()}}.
}
\examples{
httr::GET("https://api.github.com/users/salim-b") |> pal::assert_mime_type("application/json")

# an informative error is thrown when the assertion is violated
try(
  httr::GET("https://api.github.com/users/salim-b") |> pal::assert_mime_type("text/plain")
)
}
\seealso{
Other HTTP functions:
\code{\link{is_http_success}()},
\code{\link{is_url}()},
\code{\link{req_cached}()}

Other functions extending the checkmate package:
\code{\link{assert_class_any}()},
\code{\link{assert_cli}()},
\code{\link{assert_df_tbl}()},
\code{\link{assert_inf_count}()},
\code{\link{assert_pkg}()}
}
\concept{checkmate}
\concept{http}
