% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal-GEN.R
\name{check_dots_named}
\alias{check_dots_named}
\title{Check that all \link[base:dots]{dot} parameter names are a valid subset of a function's parameter names.}
\usage{
check_dots_named(
  ...,
  .function,
  .forbidden = NULL,
  .empty_ok = TRUE,
  .action = rlang::abort
)
}
\arguments{
\item{...}{The dots argument to check.}

\item{.function}{The function the \code{...} will be passed on to.}

\item{.forbidden}{Parameter names within \code{...} that should be treated as invalid.}

\item{.empty_ok}{Set to \code{TRUE} if empty \code{...} should be allowed, or to \code{FALSE} otherwise.}

\item{.action}{The action to take when the check fails. One of \code{\link[rlang:abort]{rlang::abort()}}, \code{\link[rlang:warn]{rlang::warn()}}, \code{\link[rlang:inform]{rlang::inform()}} or \code{\link[rlang:signal]{rlang::signal()}}.}
}
\description{
Check that all \link[base:dots]{dot} parameter names are a valid subset of a function's parameter names.
}
\examples{
sapply_safe <- function(X,
                        FUN,
                        ...,
                        simplify = TRUE,
                        USE.NAMES = TRUE) {
  pal::check_dots_named(...,
                        .function = FUN)
  sapply(X = X,
         FUN = FUN,
         ...,
         simplify = TRUE,
         USE.NAMES = TRUE)
}

\dontrun{
# while the original `sapply()` silently ignores misspelled arguments,
sapply(1:5, paste, "hour workdays", sep = "-", colaspe = " ")
# `sapply_safe()` will throw an informative error message:
sapply_safe(1:5, paste, "hour workdays", sep = "-", colaspe = " ")
}
}
