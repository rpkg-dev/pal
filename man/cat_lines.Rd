% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal.gen.R
\name{cat_lines}
\alias{cat_lines}
\title{Convert to character vector and print newline-separated}
\usage{
cat_lines(...)
}
\arguments{
\item{...}{\R object(s) to convert to character and print. \link[rlang:dyn-dots]{Dynamic dots} are supported.}
}
\value{
None (invisible \code{NULL}).
}
\description{
Convenience wrapper around \code{\link[=as_chr]{as_chr()}} and \code{\link[base:cat]{base::cat()}}, mainly intended for interactive use.
}
\examples{
fs::path_package(package = "pal",
                 "rstudio", "addins.dcf") |>
  readr::read_lines() |>
  pal::cat_lines()

# conversion to type character, recursive vs. non-recursive
to_convert <- list(tibble::tibble(a = 1:3), "A", factor("wonderful"), xfun::strict_list("day"))

to_convert |> pal::cat_lines()
to_convert |> cli::cat_line()
}
\seealso{
\code{\link[cli:cat_line]{cli::cat_line()}} for a faster alternative that doesn't \emph{recursively} convert its input to type character.

\code{\link[xfun:raw_string]{xfun::raw_string()}} (and \code{\link[xfun:file_string]{xfun::file_string()}}) for an alternative approach to the same use case (but without any conversion to type character at all).
}
