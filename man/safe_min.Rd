% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal-GEN.R
\name{safe_min}
\alias{safe_min}
\title{Minimum (safe)}
\usage{
safe_min(..., rm_na = TRUE)
}
\arguments{
\item{...}{The numeric objects of which to determine the minimum. \link[rlang:dyn-dots]{Dynamic dots} are supported.}

\item{rm_na}{Ignore missing values in \code{...}. If missing values are present and \code{rm_na = FALSE}, the result will always be \code{NA}.}
}
\value{
A numeric scalar or empty value, of the same type as \code{...}.
}
\description{
Modified version of \code{\link[base:Extremes]{min()}} that differs in the following ways:
\itemize{
\item \code{NA}s in the input (\code{...}) are ignored \emph{by default} (\code{rm_na = TRUE}).
\item If the input is of length zero, the output will also be of length zero (of the same type as the input).
\item It is ensured that all inputs are either numeric, of length zero or \code{NA}. There is \emph{no} case where the return value will be \code{Inf}.
\item \link[rlang:dyn-dots]{Dynamic dots} are supported.
}
}
\examples{
# other than `base::min()`, this function removes `NA`s by default
min(1, NA, 2)
safe_min(1, NA, 2)

# other than `base::min()`, this function does not return `Inf` or `NA_character_` for
# zero-length inputs
\dontrun{
min(NULL)
min(character())
min(integer())
safe_min(NULL)
safe_min(character())
safe_min(integer())

# other than `base::min()`, this function fails for non-numeric, non-zero-length inputs
min("zero", 1L)
min("zero", "one")
safe_min("zero", 1L)
safe_min("zero", "one")}
}
\seealso{
Statistical computing / numeric functions
\code{\link{round_to}()},
\code{\link{safe_max}()},
\code{\link{safe_seq_len}()},
\code{\link{stat_mode}()}
}
\concept{stat}
