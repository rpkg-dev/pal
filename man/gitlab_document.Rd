% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal-GEN.R
\name{gitlab_document}
\alias{gitlab_document}
\title{Convert to GitLab Flavored Markdown}
\usage{
gitlab_document(
  smart_punctuation = TRUE,
  parse_emoji_markup = FALSE,
  df_print = "kable",
  toc = FALSE,
  toc_depth = 6L,
  fig_width = 7L,
  fig_height = 5L,
  dev = "png",
  preserve_yaml = FALSE,
  autolink_bare_uris = FALSE,
  tex_math_single_backslash = FALSE
)
}
\arguments{
\item{smart_punctuation}{Enable \href{https://pandoc.org/MANUAL.html#extension-smart}{Pandoc's \code{smart} extension} which converts
straight quotes to curly quotes, \verb{---} to an em-dash (—), \verb{--} to an en-dash (–), and \code{...} to ellipses (…). Nonbreaking spaces are inserted after certain
abbreviations, such as \code{Mr.}.}

\item{parse_emoji_markup}{Enable \href{https://pandoc.org/MANUAL.html#extension-emoji}{Pandoc's \code{emoji} extension} which parses emoji
markup (e.g. \verb{:smile:}) as Unicode emoticons.}

\item{df_print}{Method to be used for printing data frames. Valid values
include "default", "kable", "tibble", and "paged". The "default" method
uses a corresponding S3 method of \code{print}, typically
\code{print.data.frame}. The "kable" method uses the
\code{\link[knitr:kable]{knitr::kable}} function. The "tibble" method uses
the \pkg{tibble} package to print a summary of the data frame. The "paged"
method creates a paginated HTML table (note that this method is only valid
for formats that produce HTML). In addition to the named methods you can
also pass an arbitrary function to be used for printing data frames. You
can disable the \code{df_print} behavior entirely by setting the option
\code{rmarkdown.df_print} to \code{FALSE}.}

\item{toc}{Include a table of contents (TOC) \href{https://pandoc.org/MANUAL.html#option--toc}{automatically generated by Pandoc}. Note that the TOC will be
placed \emph{before} the README's body, meaning also \emph{before} the first Markdown header.}

\item{toc_depth}{Depth of headers to include in table of contents}

\item{fig_width}{Default width (in inches) for figures}

\item{fig_height}{Default height (in inches) for figures}

\item{dev}{Graphics device to use for figure output (defaults to png)}

\item{preserve_yaml}{Preserve YAML front matter in final document.}

\item{autolink_bare_uris}{Enable the \href{https://pandoc.org/MANUAL.html#extension-autolink_bare_uris}{\code{autolink_bare_uris} Pandoc Markdown extension} which makes all absolute URIs into links, even when not surrounded by pointy braces \verb{<...>}.}

\item{tex_math_single_backslash}{Enable the \href{https://pandoc.org/MANUAL.html#extension-tex_math_single_backslash}{\code{tex_math_single_backslash} Pandoc Markdown extension} which causes anything between \verb{\\(} and \verb{\\)} to be interpreted as inline TeX math, and anything between \verb{\[} and \verb{\]} to be interpreted as display TeX math. Note: a drawback of this extension is that it precludes escaping \code{(} and \code{[}.}
}
\value{
R Markdown output format to pass to \code{\link[rmarkdown:render]{rmarkdown::render()}}.
}
\description{
Format for converting from R Markdown to \href{https://gitlab.com/help/user/markdown.md}{GitLab Flavored Markdown}.
}
\details{
This is the GitLab equivalent to the \code{\link[rmarkdown:github_document]{github_document}} R Markdown
\href{https://bookdown.org/yihui/rmarkdown/output-formats.html}{output format}. It basically ensures Pandoc is called with a custom set of options optimized for
maximum compatibility with \href{https://gitlab.com/help/user/markdown.md}{GitLab Flavored Markdown}.
}
\examples{
\donttest{
tmp_file <- fs::file_temp()
download.file(url = "https://gitlab.com/salim_b/r/pkgs/pal/-/raw/master/Rmd/pal.Rmd",
              destfile = tmp_file)

rmarkdown::render(input = tmp_file,
                  output_format = pal::gitlab_document())}
}
\seealso{
R-Markdown and Knitr functions
\code{\link{build_readme}()}
}
\concept{rmd_knitr}
